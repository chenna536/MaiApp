{"ast":null,"code":"var _jsxFileName = \"/home/chenna/parentOf/cards/src/AnimatedProgressProvider.jsx\";\nimport React from \"react\";\nimport { Animate } from \"react-move\";\n\nclass AnimatedProgressProvider extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.interval = undefined;\n    this.state = {\n      isAnimated: false\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      isAnimated: !this.state.isAnimated\n    });\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.interval);\n  }\n\n  render() {\n    return React.createElement(Animate, {\n      start: () => ({\n        value: this.props.valueStart\n      }),\n      update: () => ({\n        value: [this.state.isAnimated ? this.props.valueEnd : this.props.valueStart],\n        timing: {\n          duration: this.props.duration * 1000,\n          ease: this.props.easingFunction\n        }\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, ({\n      value\n    }) => this.props.children(value));\n  }\n\n}\n\nAnimatedProgressProvider.defaultProps = {\n  valueStart: 0\n};\nexport default AnimatedProgressProvider;","map":{"version":3,"sources":["/home/chenna/parentOf/cards/src/AnimatedProgressProvider.jsx"],"names":["React","Animate","AnimatedProgressProvider","Component","interval","undefined","state","isAnimated","componentDidMount","setState","componentWillUnmount","window","clearInterval","render","value","props","valueStart","valueEnd","timing","duration","ease","easingFunction","children","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,YAAxB;;AAEA,MAAMC,wBAAN,SAAuCF,KAAK,CAACG,SAA7C,CAAuD;AAAA;AAAA;AAAA,SACrDC,QADqD,GAC1CC,SAD0C;AAAA,SAGrDC,KAHqD,GAG7C;AACNC,MAAAA,UAAU,EAAE;AADN,KAH6C;AAAA;;AAWrDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,QAAL,CAAc;AACZF,MAAAA,UAAU,EAAE,CAAC,KAAKD,KAAL,CAAWC;AADZ,KAAd;AAGH;;AAEDG,EAAAA,oBAAoB,GAAG;AACrBC,IAAAA,MAAM,CAACC,aAAP,CAAqB,KAAKR,QAA1B;AACD;;AAEDS,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,OAAD;AACE,MAAA,KAAK,EAAE,OAAO;AACZC,QAAAA,KAAK,EAAE,KAAKC,KAAL,CAAWC;AADN,OAAP,CADT;AAIE,MAAA,MAAM,EAAE,OAAO;AACbF,QAAAA,KAAK,EAAE,CACL,KAAKR,KAAL,CAAWC,UAAX,GAAwB,KAAKQ,KAAL,CAAWE,QAAnC,GAA8C,KAAKF,KAAL,CAAWC,UADpD,CADM;AAIbE,QAAAA,MAAM,EAAE;AACNC,UAAAA,QAAQ,EAAE,KAAKJ,KAAL,CAAWI,QAAX,GAAsB,IAD1B;AAENC,UAAAA,IAAI,EAAE,KAAKL,KAAL,CAAWM;AAFX;AAJK,OAAP,CAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAcG,CAAC;AAAEP,MAAAA;AAAF,KAAD,KAAe,KAAKC,KAAL,CAAWO,QAAX,CAAoBR,KAApB,CAdlB,CADF;AAkBD;;AAxCoD;;AAAjDZ,wB,CAOGqB,Y,GAAe;AACpBP,EAAAA,UAAU,EAAE;AADQ,C;AAoCxB,eAAed,wBAAf","sourcesContent":["import React from \"react\";\nimport { Animate } from \"react-move\";\n\nclass AnimatedProgressProvider extends React.Component {\n  interval = undefined;\n\n  state = {\n    isAnimated: false\n  };\n\n  static defaultProps = {\n    valueStart: 0\n  };\n\n  componentDidMount() {\n      this.setState({\n        isAnimated: !this.state.isAnimated\n      });\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.interval);\n  }\n\n  render() {\n    return (\n      <Animate\n        start={() => ({\n          value: this.props.valueStart\n        })}\n        update={() => ({\n          value: [\n            this.state.isAnimated ? this.props.valueEnd : this.props.valueStart\n          ],\n          timing: {\n            duration: this.props.duration * 1000,\n            ease: this.props.easingFunction\n          }\n        })}\n      >\n        {({ value }) => this.props.children(value)}\n      </Animate>\n    );\n  }\n}\n\nexport default AnimatedProgressProvider;\n"]},"metadata":{},"sourceType":"module"}