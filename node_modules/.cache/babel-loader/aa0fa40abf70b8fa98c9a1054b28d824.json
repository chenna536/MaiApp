{"ast":null,"code":"const axios = require('axios');\n\nconst access_token = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjVkNTExOGYzZmJlNjI5MzE0OTc0Y2EwYiIsImlhdCI6MTU2NTU5NjAwOX0.kwgnPc0jcqGL3RBw8MOmI2eZTaRnuCqy1NmIAPsXZAY';\n\nasync function fetchData(URL) {\n  let result = {\n    data: [],\n    status: \"INIT\"\n  };\n  result.status = \"LOADING\";\n  await axios.get(URL, {\n    headers: {\n      'Content-Type': 'application/json',\n      'x-access-token': access_token\n    }\n  }).then(data => {\n    result.data = data;\n    result.status = \"SUCCESS\";\n    return result;\n  }).catch(error => {\n    console.log('error :', error);\n    result.status = \"ERROR\";\n    return result;\n  });\n  return result;\n}\n\nconst sendResponse = async (URL, obj) => {\n  await axios.post(URL, obj).then(response => {\n    result.status = response.status;\n    return response.status;\n  }).catch(error => {\n    console.log('error :', error);\n    result.status = \"ERROR\";\n    return result;\n  });\n};\n\nexport { sendResponse, fetchData }; // var myInit = { method: 'GET',\n//                headers: {\n//                 'Content-Type': 'application/json',\n//                 'x-access-token': access_token,\n//                },\n//                mode: 'cors',\n//                cache: 'default'\n//             };\n\n/*\n    fetch(URL, myInit).then(res => res.json()).then(\n            (res) => {\n              setPostData(res.data.questions)\n              setStatus(\"SUCCESS\")\n            },\n          (error) => {\n            setStatus(\"error\")\n          }\n        );\n    axios.get(URL,{\n       headers: {\n                'Content-Type': 'application/json',\n                'x-access-token': access_token,\n               }\n    })\n  .then(function (response) {\n    // handle success\n    console.log(response);\n  })\n  .catch(function (error) {\n    // handle error\n    console.log(error);\n  }) */","map":{"version":3,"sources":["/home/chenna/parentOf/cards/src/fetchCall.js"],"names":["axios","require","access_token","fetchData","URL","result","data","status","get","headers","then","catch","error","console","log","sendResponse","obj","post","response"],"mappings":"AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,MAAMC,YAAY,GAAG,sJAArB;;AAEA,eAAeC,SAAf,CAAyBC,GAAzB,EAA8B;AAC1B,MAAIC,MAAM,GAAC;AAACC,IAAAA,IAAI,EAAC,EAAN;AAAUC,IAAAA,MAAM,EAAC;AAAjB,GAAX;AACAF,EAAAA,MAAM,CAACE,MAAP,GAAc,SAAd;AACA,QAAMP,KAAK,CAACQ,GAAN,CAAUJ,GAAV,EAAe;AACjBK,IAAAA,OAAO,EAAE;AACA,sBAAgB,kBADhB;AAEA,wBAAkBP;AAFlB;AADQ,GAAf,EAMDQ,IANC,CAMIJ,IAAI,IAAI;AACVD,IAAAA,MAAM,CAACC,IAAP,GAAcA,IAAd;AACAD,IAAAA,MAAM,CAACE,MAAP,GAAgB,SAAhB;AACA,WAAOF,MAAP;AACH,GAVC,EAWDM,KAXC,CAWKC,KAAK,IAAI;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,KAAvB;AACAP,IAAAA,MAAM,CAACE,MAAP,GAAc,OAAd;AACA,WAAOF,MAAP;AACH,GAfC,CAAN;AAgBI,SAAOA,MAAP;AACP;;AAED,MAAMU,YAAY,GAAG,OAAMX,GAAN,EAAWY,GAAX,KAAmB;AACpC,QAAMhB,KAAK,CAACiB,IAAN,CAAWb,GAAX,EAAeY,GAAf,EAAoBN,IAApB,CACFQ,QAAQ,IAAI;AACRb,IAAAA,MAAM,CAACE,MAAP,GAAgBW,QAAQ,CAACX,MAAzB;AACA,WAAOW,QAAQ,CAACX,MAAhB;AACH,GAJC,EAKJI,KALI,CAKEC,KAAK,IAAI;AACbC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,KAAvB;AACAP,IAAAA,MAAM,CAACE,MAAP,GAAc,OAAd;AACA,WAAOF,MAAP;AACH,GATK,CAAN;AAUH,CAXD;;AAaA,SAASU,YAAT,EAAwBZ,SAAxB,G,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["const axios = require('axios');\nconst access_token = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjVkNTExOGYzZmJlNjI5MzE0OTc0Y2EwYiIsImlhdCI6MTU2NTU5NjAwOX0.kwgnPc0jcqGL3RBw8MOmI2eZTaRnuCqy1NmIAPsXZAY';\n\nasync function fetchData(URL) {\n    let result={data:[], status:\"INIT\"}\n    result.status=\"LOADING\";\n    await axios.get(URL, {\n        headers: {\n                 'Content-Type': 'application/json',\n                 'x-access-token': access_token,\n                }\n        })\n        .then(data => {\n            result.data = data;\n            result.status = \"SUCCESS\";\n            return result;\n        })\n        .catch(error => {\n            console.log('error :', error);\n            result.status=\"ERROR\";\n            return result;\n        })\n        return result;\n}\n\nconst sendResponse = async(URL, obj) => {\n    await axios.post(URL,obj).then(\n        response => {\n            result.status = response.status;\n            return response.status\n        }\n    ).catch(error => {\n        console.log('error :', error);\n        result.status=\"ERROR\";\n        return result;\n    })\n}\n \nexport { sendResponse , fetchData };\n\n// var myInit = { method: 'GET',\n//                headers: {\n//                 'Content-Type': 'application/json',\n//                 'x-access-token': access_token,\n//                },\n//                mode: 'cors',\n//                cache: 'default'\n//             };\n/*\n    fetch(URL, myInit).then(res => res.json()).then(\n            (res) => {\n              setPostData(res.data.questions)\n              setStatus(\"SUCCESS\")\n            },\n          (error) => {\n            setStatus(\"error\")\n          }\n        );\n    axios.get(URL,{\n       headers: {\n                'Content-Type': 'application/json',\n                'x-access-token': access_token,\n               }\n    })\n  .then(function (response) {\n    // handle success\n    console.log(response);\n  })\n  .catch(function (error) {\n    // handle error\n    console.log(error);\n  }) */"]},"metadata":{},"sourceType":"module"}