{"ast":null,"code":"import _defineProperty from \"/home/chenna/parentOf/cards/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/chenna/parentOf/cards/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/chenna/parentOf/cards/src/Cardslist.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { animated, useTransition } from 'react-spring';\nimport fetchData from './fetchCall.js'; // import { Spring } from \"react-spring/renderprops\";\n\nimport \"./index.css\";\nimport { Card } from \"./Card.jsx\";\n\nconst axios = require('axios');\n\nconst access_token = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjVkNTExOGYzZmJlNjI5MzE0OTc0Y2EwYiIsImlhdCI6MTU2NTU5NjAwOX0.kwgnPc0jcqGL3RBw8MOmI2eZTaRnuCqy1NmIAPsXZAY';\nconst URL = 'https://dev.mai.family/api/v1/child/5d5119befbe629314974ca0d/assessment/5ce28e02990bef418d6aceb0'; // var myInit = { method: 'GET',\n//                headers: {\n//                 'Content-Type': 'application/json',\n//                 'x-access-token': access_token,\n//                },\n//                mode: 'cors',\n//                cache: 'default'\n//             };\n\nconst CardsList = () => {\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        index = _useState2[0],\n        set = _useState2[1];\n\n  const _useState3 = useState({\n    data: [],\n    status: \"INIT\"\n  }),\n        _useState4 = _slicedToArray(_useState3, 2),\n        visitors = _useState4[0],\n        setVisitors = _useState4[1];\n\n  const _useState5 = useState('loading'),\n        _useState6 = _slicedToArray(_useState5, 2),\n        status = _useState6[0],\n        setStatus = _useState6[1];\n\n  const _useState7 = useState([{\n    name: ''\n  }]),\n        _useState8 = _slicedToArray(_useState7, 2),\n        PostData = _useState8[0],\n        setPostData = _useState8[1];\n\n  const handleClick = useCallback(() => set(state => state + 1), []);\n\n  const getData = async () => {\n    await axios.get(URL, {\n      headers: {\n        'Content-Type': 'application/json',\n        'x-access-token': access_token\n      }\n    }).then(res => {\n      setPostData(res.data.data.questions);\n      console.log(res.data.data.questions[0]);\n      setStatus(\"SUCCESS\");\n    });\n  };\n\n  useEffect(() => {\n    getData();\n  }, []); // useEffect(() => {\n  //   const check = async () => {\n  //       setVisitors({ data: [], status: \"LOADING\" })\n  //       const data = await fetchData(`/api/events?type=` + type);\n  //       setVisitors(data);\n  //   }\n  //   check();\n  // }, [])\n\n  let pages;\n  const transitions = useTransition(index, p => p, {\n    from: {\n      opacity: 0,\n      marginTop: '100%',\n      padding: '1em'\n    },\n    enter: {\n      opacity: 1,\n      marginTop: '30%',\n      padding: '1em'\n    },\n    leave: {\n      opacity: 0,\n      marginTop: '-100%',\n      padding: '1em'\n    }\n  });\n  const next_transition = useTransition(index, p => p, {\n    from: {\n      opacity: 0,\n      marginTop: '100%',\n      padding: '1em'\n    },\n    enter: {\n      opacity: 0.3,\n      marginTop: '10%',\n      padding: '1em'\n    },\n    leave: {\n      opacity: 0,\n      marginTop: '-100%',\n      padding: '1em'\n    }\n  });\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, status === 'SUCCESS' ? React.createElement(\"div\", {\n    className: \"simple-trans-main\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, transitions.map(({\n    item,\n    props,\n    key\n  }) => {\n    pages = PostData.map(card => ({\n      style\n    }) => React.createElement(animated.div, {\n      style: _objectSpread({}, style),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Card, {\n      fun: handleClick,\n      data: card,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    })));\n    const Page = pages[item];\n    return React.createElement(\"div\", {\n      key: key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(Page, {\n      style: props,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }));\n  }), next_transition.map(({\n    item,\n    props,\n    key\n  }) => {\n    const Page = pages[item + 1];\n    return React.createElement(\"div\", {\n      key: key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(Page, {\n      style: props,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }));\n  })) : React.createElement(\"div\", {\n    key: 0,\n    style: {\n      marginLeft: '200%',\n      marginTop: '200%',\n      fontSize: '2em'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"Loading...\"));\n};\n\nexport default CardsList;\n/*\n    fetch(URL, myInit).then(res => res.json()).then(\n            (res) => {\n              setPostData(res.data.questions)\n              setStatus(\"SUCCESS\")\n            },\n          (error) => {\n            setStatus(\"error\")\n          }\n        );\n    axios.get(URL,{\n       headers: {\n                'Content-Type': 'application/json',\n                'x-access-token': access_token,\n               }\n    })\n  .then(function (response) {\n    // handle success\n    console.log(response);\n  })\n  .catch(function (error) {\n    // handle error\n    console.log(error);\n  }) */","map":{"version":3,"sources":["/home/chenna/parentOf/cards/src/Cardslist.jsx"],"names":["React","useCallback","useEffect","useState","animated","useTransition","fetchData","Card","axios","require","access_token","URL","CardsList","index","set","data","status","visitors","setVisitors","setStatus","name","PostData","setPostData","handleClick","state","getData","get","headers","then","res","questions","console","log","pages","transitions","p","from","opacity","marginTop","padding","enter","leave","next_transition","map","item","props","key","card","style","Page","marginLeft","fontSize"],"mappings":"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","sourcesContent":["import React, { useCallback,useEffect, useState } from 'react';\nimport { animated, useTransition } from 'react-spring';\n\nimport fetchData from './fetchCall.js'\n// import { Spring } from \"react-spring/renderprops\";\nimport \"./index.css\";\nimport  { Card }  from \"./Card.jsx\";\n\nconst axios = require('axios');\n\nconst access_token = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjVkNTExOGYzZmJlNjI5MzE0OTc0Y2EwYiIsImlhdCI6MTU2NTU5NjAwOX0.kwgnPc0jcqGL3RBw8MOmI2eZTaRnuCqy1NmIAPsXZAY';\nconst URL = 'https://dev.mai.family/api/v1/child/5d5119befbe629314974ca0d/assessment/5ce28e02990bef418d6aceb0';\n// var myInit = { method: 'GET',\n//                headers: {\n//                 'Content-Type': 'application/json',\n//                 'x-access-token': access_token,\n//                },\n//                mode: 'cors',\n//                cache: 'default'\n//             };\n\nconst CardsList = () => {\n    const [index, set] = useState(0);\n    const [visitors, setVisitors] = useState({ data: [], status: \"INIT\" })\n    const [status,setStatus] = useState('loading')\n    const [PostData, setPostData] = useState([{name : ''}]);\n    const handleClick = useCallback(() => set(state => (state + 1)),[]);\n\n    const getData = async() => {\n        await axios.get(URL,{\n          headers: {\n                   'Content-Type': 'application/json',\n                   'x-access-token': access_token,\n                  }\n       }).then((res) => {\n                setPostData(res.data.data.questions)\n                console.log(res.data.data.questions[0])\n                setStatus(\"SUCCESS\")\n              }\n          );\n      }\n      useEffect(() => {\n        getData();\n      },[])\n      // useEffect(() => {\n      //   const check = async () => {\n      //       setVisitors({ data: [], status: \"LOADING\" })\n      //       const data = await fetchData(`/api/events?type=` + type);\n      //       setVisitors(data);\n      //   }\n      //   check();\n      // }, [])\n\n    let pages;\n    const transitions = useTransition((index), p => p, {\n      from: { opacity: 0 , marginTop: '100%', padding: '1em'},\n      enter: { opacity: 1 , marginTop: '30%', padding: '1em'},\n      leave: { opacity: 0 , marginTop: '-100%', padding: '1em'},\n    })\n\n    const next_transition = useTransition((index), p => p, {\n      from: { opacity: 0 , marginTop: '100%', padding: '1em' },\n      enter: { opacity: 0.3 , marginTop: '10%', padding: '1em' },\n      leave: { opacity: 0 , marginTop: '-100%', padding: '1em' },\n    })\n\n    return ( \n        <div className=\"App\">\n      {(status==='SUCCESS') ?\n      <div className=\"simple-trans-main\">\n\n        {transitions.map(({ item, props, key }) => {\n         pages = PostData.map(card => ({ style }) => (\n              <animated.div style={{ ...style }}>\n                  <Card fun={handleClick} data = { card }/>\n              </animated.div>\n               ));\n          const Page = pages[item];\n          return (<div key={key}><Page style={props} /></div>)\n         })}\n        \n        {next_transition.map(({ item, props, key }) => {\n          const Page = pages[item+1];\n          return (<div key={key}><Page style={props} /></div>)\n        })}\n         \n      </div> : <div key={0} style={{marginLeft: '200%',\n    marginTop: '200%',\n    fontSize: '2em'}}>Loading...</div>}\n    </div>\n     );\n}\n \nexport default CardsList;\n\n/*\n    fetch(URL, myInit).then(res => res.json()).then(\n            (res) => {\n              setPostData(res.data.questions)\n              setStatus(\"SUCCESS\")\n            },\n          (error) => {\n            setStatus(\"error\")\n          }\n        );\n    axios.get(URL,{\n       headers: {\n                'Content-Type': 'application/json',\n                'x-access-token': access_token,\n               }\n    })\n  .then(function (response) {\n    // handle success\n    console.log(response);\n  })\n  .catch(function (error) {\n    // handle error\n    console.log(error);\n  }) */"]},"metadata":{},"sourceType":"module"}