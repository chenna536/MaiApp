{"ast":null,"code":"var _jsxFileName = \"/home/chenna/parentOf/cards/src/App.jsx\";\nimport React from 'react'; // import { Spring } from \"react-spring/renderprops\";\n// import \"./index.css\";\n// import  CardsList  from \"./Cardslist.jsx\";\n\nimport Status from \"./status.jsx\";\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Landing from './landing_page.jsx';\nimport Assessment from './Assessment.jsx';\nimport Dashboard from './Dashboard.jsx'; // import Checkoutform from './Checkoutform.jsx'\n\nexport default function App() {\n  return React.createElement(Router, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      width: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: Landing,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/assessment\",\n    component: Sta,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/dashboard\",\n    component: Dashboard,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  })))) // <Status/>\n  // <Checkoutform/>\n  ;\n} // Start App\n// var data = 0;\n// let divStyle = {\n//     opacity: data,\n//     transition: \"opacity 5s ease-in\"\n// };\n// const timeout = 1000;\n// let noOfCards = 1;\n// opacity should be (1/no of elements)\n\n/* const pages = PostsData.map(card => ({ style }) => (\n        <animated.div style={{ ...style }}>\n          <MediaCard fun={onClick} data = { card }/>\n        </animated.div>\n      )); */\n//   useEffect(() => {\n//     fetch(myRequest).then((response) => {\n//         var contentType = response.headers.get('content-type');\n//         if(contentType && contentType.includes('application/json')) {\n//           return response.json();\n//         }\n//         throw new TypeError(\"Oops, we haven't got JSON!\");\n//       })\n//       .then((json) => {\n//         setAssessment(json)\n//         // console.log(questions)\n//     }\n//         //   console.log(data.data.questions.map(question => question));\n//         //   console.log(data.data.questions.map(question => question.responseType.displayOptions.map(options => options.option)));\n//         )\n//         // .then(y => console.log(y))\n//       .catch((error) => { console.log(error); });\n//       const pages = assessment.data.questions.map(card => ({ style }) => (\n//         <animated.div style={{ ...style }}>\n//           <MediaCard fun={onClick} data = { card }/>\n//         </animated.div>\n//       ));\n//   },[])\n// let newStyle = () => {\n//     if (data < (1/noOfCards)+(1/noOfCards).toFixed(1)) {\n//         data = 1;\n//     }\n//     data = (data - (1/noOfCards)).toFixed(1);\n//     let divStyle = {\n//         opacity: data\n//     };\n//     return divStyle;\n// };\n// export default function App () {\n//     const [cards, setCards] = useState(PostsData);\n//     const [fade, setFade] = useState(false);\n//     const [items, setItems] = useState([1]);\n//     const onAnswerHandle = () => {\n//         let newData = cards.filter(card => cards[0] !== card);\n//         setCards(newData);\n//         setFade(true);\n//     };\n// const onClick = () => {\n//     i++;\n//     set(twoPages)\n// }\n//         return ( <div  className = {`App ${fade ?\"fade\" : ''}`} >\n//         {/* <TransitionGroup component=\"div\"> */\n//             {\n//                 cards.filter(post => cards.indexOf(post) < noOfCards)\n//                     .map((post, i) => (\n//                         // <CSSTransition key={i} timeout={500} classNames=\"messageout\">\n//                         <MediaCard index = { i } data = { post } onAnswerHandle = { onAnswerHandle }/>\n//                         /* </CSSTransition>  */\n//                 ))\n//             }\n//         {/* </TransitionGroup> */}\n//              </div>\n//         );\n//     // }\n// }","map":{"version":3,"sources":["/home/chenna/parentOf/cards/src/App.jsx"],"names":["React","Status","BrowserRouter","Router","Switch","Route","Landing","Assessment","Dashboard","App","width","Sta"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;AACA;AACA;;AACA,OAAQC,MAAR,MAAqB,cAArB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,QAAuD,kBAAvD;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAOC,SAAP,MAAsB,iBAAtB,C,CACA;;AAEA,eAAe,SAASC,GAAT,GAAe;AAC5B,SACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,GAAlB;AAAsB,IAAA,SAAS,EAAEJ,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,aAAZ;AAA0B,IAAA,SAAS,EAAEK,GAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,YAAZ;AAAyB,IAAA,SAAS,EAAEH,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF,CADF,CADF,CAUA;AACA;AAXA;AAaD,C,CAGD;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\n// import { Spring } from \"react-spring/renderprops\";\n// import \"./index.css\";\n// import  CardsList  from \"./Cardslist.jsx\";\nimport  Status  from \"./status.jsx\";\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Landing from './landing_page.jsx';\nimport Assessment from './Assessment.jsx';\nimport Dashboard from './Dashboard.jsx';\n// import Checkoutform from './Checkoutform.jsx'\n\nexport default function App() {\n  return (\n    <Router>\n      <div style={{ width: '100%' }}>\n        <Switch>\n          <Route exact path=\"/\" component={Landing} />\n          <Route path=\"/assessment\" component={Sta} />\n          <Route path=\"/dashboard\" component={Dashboard} />\n        </Switch>\n      </div>\n    </Router>\n  // <Status/>\n  // <Checkoutform/>\n  );\n}\n\n\n// Start App\n// var data = 0;\n\n// let divStyle = {\n//     opacity: data,\n//     transition: \"opacity 5s ease-in\"\n// };\n// const timeout = 1000;\n\n// let noOfCards = 1;\n// opacity should be (1/no of elements)\n\n/* const pages = PostsData.map(card => ({ style }) => (\n        <animated.div style={{ ...style }}>\n          <MediaCard fun={onClick} data = { card }/>\n        </animated.div>\n      )); */\n\n//   useEffect(() => {\n//     fetch(myRequest).then((response) => {\n//         var contentType = response.headers.get('content-type');\n//         if(contentType && contentType.includes('application/json')) {\n//           return response.json();\n//         }\n//         throw new TypeError(\"Oops, we haven't got JSON!\");\n//       })\n//       .then((json) => {\n//         setAssessment(json)\n//         // console.log(questions)\n//     }\n//         //   console.log(data.data.questions.map(question => question));\n//         //   console.log(data.data.questions.map(question => question.responseType.displayOptions.map(options => options.option)));\n//         )\n//         // .then(y => console.log(y))\n//       .catch((error) => { console.log(error); });\n//       const pages = assessment.data.questions.map(card => ({ style }) => (\n//         <animated.div style={{ ...style }}>\n//           <MediaCard fun={onClick} data = { card }/>\n//         </animated.div>\n//       ));\n//   },[])\n\n// let newStyle = () => {\n\n//     if (data < (1/noOfCards)+(1/noOfCards).toFixed(1)) {\n//         data = 1;\n//     }\n\n//     data = (data - (1/noOfCards)).toFixed(1);\n\n//     let divStyle = {\n//         opacity: data\n//     };\n\n//     return divStyle;\n// };\n\n// export default function App () {\n\n//     const [cards, setCards] = useState(PostsData);\n//     const [fade, setFade] = useState(false);\n//     const [items, setItems] = useState([1]);\n\n//     const onAnswerHandle = () => {\n//         let newData = cards.filter(card => cards[0] !== card);\n//         setCards(newData);\n//         setFade(true);\n//     };\n\n// const onClick = () => {\n//     i++;\n//     set(twoPages)\n// }\n\n//         return ( <div  className = {`App ${fade ?\"fade\" : ''}`} >\n//         {/* <TransitionGroup component=\"div\"> */\n//             {\n//                 cards.filter(post => cards.indexOf(post) < noOfCards)\n//                     .map((post, i) => (\n//                         // <CSSTransition key={i} timeout={500} classNames=\"messageout\">\n//                         <MediaCard index = { i } data = { post } onAnswerHandle = { onAnswerHandle }/>\n//                         /* </CSSTransition>  */\n//                 ))\n//             }\n//         {/* </TransitionGroup> */}\n//              </div>\n//         );\n//     // }\n// }\n"]},"metadata":{},"sourceType":"module"}