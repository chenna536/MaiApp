{"ast":null,"code":"import _defineProperty from \"/home/chenna/parentOf/cards/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/chenna/parentOf/cards/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/chenna/parentOf/cards/src/Cardslist.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { animated, useTransition } from 'react-spring';\nimport { fetchData } from './fetchCall.js'; // import { Spring } from \"react-spring/renderprops\";\n\nimport \"./index.css\";\nimport { Card } from \"./Card.jsx\";\n\nconst axios = require('axios');\n\nconst access_token = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjVkNTExOGYzZmJlNjI5MzE0OTc0Y2EwYiIsImlhdCI6MTU2NTU5NjAwOX0.kwgnPc0jcqGL3RBw8MOmI2eZTaRnuCqy1NmIAPsXZAY';\nconst URL = 'https://dev.mai.family/api/v1/child/5d5119befbe629314974ca0d/assessment/5ce28e02990bef418d6aceb0';\nconst postUrl = 'https://dev.mai.family/api/v1/child/5d5119befbe629314974ca0d/assessment';\nlet assessmentId = '5ce28e02990bef418d6aceb0';\n\nconst CardsList = () => {\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        index = _useState2[0],\n        setIndex = _useState2[1];\n\n  const _useState3 = useState('loading'),\n        _useState4 = _slicedToArray(_useState3, 2),\n        status = _useState4[0],\n        setStatus = _useState4[1];\n\n  const _useState5 = useState([{\n    data: [],\n    status: \"INIT\"\n  }]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        PostData = _useState6[0],\n        setPostData = _useState6[1];\n\n  const _useState7 = useState(0),\n        _useState8 = _slicedToArray(_useState7, 2),\n        progress = _useState8[0],\n        setProgress = _useState8[1];\n\n  const _useState9 = useState(0),\n        _useState10 = _slicedToArray(_useState9, 2),\n        assessment = _useState10[0],\n        setAssessment = _useState10[1];\n\n  const sendResponse = async (URL, parameters) => {\n    let result = {\n      progress: []\n    };\n    await axios({\n      method: 'post',\n      url: URL,\n      data: parameters,\n      headers: {\n        'Content-Type': 'application/json',\n        'x-access-token': access_token\n      }\n    }).then(response => {\n      // ((response.data.data.progress).toFixed(0)==100) ? setStatus('Completed') : setStatus('SUCCESS')\n      // setProgress((response.data.data.progress).toFixed(0));\n      setProgress(100);\n      console.log('Progress:', response.data.data.progress.toFixed(0));\n      result.progress = response.data.data.progress.toFixed(0);\n      return result;\n    }).catch(error => {\n      console.log('error :', error);\n      result.status = \"ERROR\";\n      return result;\n    });\n    return result;\n  };\n\n  const handleClick = useCallback(async (res, questionId) => {\n    let responseData = {\n      \"assessmentId\": \"5ce28e02990bef418d6aceb0\",\n      \"questionId\": questionId,\n      \"response\": res\n    };\n    console.log('user_response', {\n      'assessmentId ': assessmentId,\n      'questionId ': questionId,\n      'user_response ': res\n    });\n    await sendResponse(postUrl, responseData).then(a => console.log(a)); // .then(() => {console.log(progress);\n    // await console.log(PostData);\n    // console.log(sendResponse(postUrl, responseData));\n\n    await setIndex(state => {\n      // console.log(progress)\n      // console.log(assessment)\n      return state + 1;\n    }); // })\n  }, []);\n\n  const getAssessment = async () => {\n    const response = await fetchData(URL);\n    await setPostData(response.data.data.data.questions);\n    setAssessment(100);\n    await setStatus(response.status);\n  };\n\n  useEffect(() => {\n    getAssessment(); // handleClick();\n    // console.log(progress);\n  }, []);\n  let pages = PostData.map(card => ({\n    style\n  }) => React.createElement(animated.div, {\n    style: _objectSpread({}, style),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(Card, {\n    fun: handleClick,\n    data: card,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }))); // console.log(progress);\n\n  const transitions = useTransition(index, p => p, {\n    from: {\n      opacity: 0,\n      marginTop: '100%',\n      padding: '1em'\n    },\n    enter: {\n      opacity: 1,\n      marginTop: '20%',\n      padding: '1em'\n    },\n    leave: {\n      opacity: 0,\n      marginTop: '-100%',\n      padding: '1em'\n    }\n  });\n  const next_transition = useTransition(index, p => p, {\n    from: {\n      opacity: 0,\n      marginTop: '100%',\n      padding: '1em'\n    },\n    enter: {\n      opacity: 0.3,\n      marginTop: '10%',\n      padding: '1em'\n    },\n    leave: {\n      opacity: 0,\n      marginTop: '-100%',\n      padding: '1em'\n    }\n  });\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, status === 'SUCCESS' ? React.createElement(\"div\", {\n    className: \"simple-trans-main\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, transitions.map(({\n    item,\n    props,\n    key\n  }) => {\n    const Page = pages[item];\n    return React.createElement(\"div\", {\n      key: key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(Page, {\n      style: props,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }));\n  }), next_transition.map(({\n    item,\n    props,\n    key\n  }) => {\n    const Page = pages[item + 1];\n    return React.createElement(\"div\", {\n      key: key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(Page, {\n      style: props,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }));\n  })) : React.createElement(\"div\", {\n    key: 0,\n    style: {\n      marginLeft: '200%',\n      marginTop: '200%',\n      fontSize: '2em'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, \"Loading...\"));\n};\n\nexport default CardsList;","map":{"version":3,"sources":["/home/chenna/parentOf/cards/src/Cardslist.jsx"],"names":["React","useCallback","useEffect","useState","animated","useTransition","fetchData","Card","axios","require","access_token","URL","postUrl","assessmentId","CardsList","index","setIndex","status","setStatus","data","PostData","setPostData","progress","setProgress","assessment","setAssessment","sendResponse","parameters","result","method","url","headers","then","response","console","log","toFixed","catch","error","handleClick","res","questionId","responseData","a","state","getAssessment","questions","pages","map","card","style","transitions","p","from","opacity","marginTop","padding","enter","leave","next_transition","item","props","key","Page","marginLeft","fontSize"],"mappings":"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","sourcesContent":["import React, { useCallback,useEffect, useState } from 'react';\nimport { animated, useTransition } from 'react-spring';\nimport { fetchData } from './fetchCall.js';\n// import { Spring } from \"react-spring/renderprops\";\nimport \"./index.css\";\nimport  { Card }  from \"./Card.jsx\";\nconst axios = require('axios');\nconst access_token = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjVkNTExOGYzZmJlNjI5MzE0OTc0Y2EwYiIsImlhdCI6MTU2NTU5NjAwOX0.kwgnPc0jcqGL3RBw8MOmI2eZTaRnuCqy1NmIAPsXZAY';\n\nconst URL = 'https://dev.mai.family/api/v1/child/5d5119befbe629314974ca0d/assessment/5ce28e02990bef418d6aceb0';\nconst postUrl = 'https://dev.mai.family/api/v1/child/5d5119befbe629314974ca0d/assessment'\nlet assessmentId = '5ce28e02990bef418d6aceb0';\n\nconst CardsList = () => {\n    const [index, setIndex] = useState(0);\n    const [status,setStatus] = useState('loading')\n    const [PostData, setPostData] = useState([{ data: [], status: \"INIT\" }]);\n    const [progress, setProgress] = useState(0);\n    const [assessment, setAssessment] = useState(0);\n\n    const sendResponse = async(URL, parameters) => {\n      let result = {progress:[]}\n      await axios({\n        method: 'post',\n        url: URL,\n        data: parameters,\n        headers: {\n          'Content-Type': 'application/json',\n          'x-access-token': access_token,\n         }\n      })\n      .then(  response => {\n            // ((response.data.data.progress).toFixed(0)==100) ? setStatus('Completed') : setStatus('SUCCESS')\n            // setProgress((response.data.data.progress).toFixed(0));\n             setProgress(100);\n             console.log('Progress:',(response.data.data.progress).toFixed(0));\n             result.progress = (response.data.data.progress).toFixed(0)\n             return result;\n          }\n      ).catch(error => {\n          console.log('error :', error);\n          result.status=\"ERROR\";\n          return result;\n      }) \n      return result;\n    }\n\n    const handleClick = useCallback(async(res, questionId) => {\n\n      let responseData = {\n          \"assessmentId\": \"5ce28e02990bef418d6aceb0\",\n          \"questionId\": questionId,\n          \"response\": res\n      }\n\n      console.log('user_response',{'assessmentId ': assessmentId,\n                  'questionId ':questionId,\n                  'user_response ': res,});\n      await sendResponse(postUrl, responseData).then((a) => console.log(a));\n      // .then(() => {console.log(progress);\n      // await console.log(PostData);\n      // console.log(sendResponse(postUrl, responseData));\n      await setIndex(state => {\n        // console.log(progress)\n        // console.log(assessment)\n        return (state + 1)\n      })\n      // })\n    },[]);\n\n    const getAssessment = async() => {\n      const response = await fetchData(URL);\n      await setPostData(response.data.data.data.questions)\n      setAssessment(100)\n      await setStatus(response.status)\n      }\n\n     useEffect(() => {\n        getAssessment();\n        // handleClick();\n        // console.log(progress);\n      },[])\n    \n    let pages = PostData.map(card => ({ style }) => (\n      <animated.div style={{ ...style }}>\n          <Card fun={handleClick} data = { card }/>\n      </animated.div>\n       ));\n\n    // console.log(progress);\n    const transitions = useTransition((index), p => p, {\n      from: { opacity: 0 , marginTop: '100%', padding: '1em'},\n      enter: { opacity: 1 , marginTop: '20%', padding: '1em'},\n      leave: { opacity: 0 , marginTop: '-100%', padding: '1em'},\n    })\n\n    const next_transition = useTransition((index), p => p, {\n      from: { opacity: 0 , marginTop: '100%', padding: '1em' },\n      enter: { opacity: 0.3 , marginTop: '10%', padding: '1em' },\n      leave: { opacity: 0 , marginTop: '-100%', padding: '1em' },\n    })\n\n    return (\n      <div className=\"App\">\n      {(status==='SUCCESS') ?\n      <div className=\"simple-trans-main\">\n        { transitions.map(({ item, props, key }) => {\n          const Page = pages[item];\n          return (<div key={key}><Page style={props} /></div>)\n         })}\n        { next_transition.map(({ item, props, key }) => {\n          const Page = pages[item+1];\n          return (<div key={key}><Page style={props} /></div>)\n        })}\n      </div> : <div key={0} style={{marginLeft: '200%', marginTop: '200%',fontSize: '2em'}}>\n        Loading...\n        </div>\n      }\n    </div>\n     ); \n}\n \nexport default CardsList;\n"]},"metadata":{},"sourceType":"module"}