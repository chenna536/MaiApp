{"ast":null,"code":"var _jsxFileName = \"/home/chenna/parentOf/cards/src/CircularProgressBar.jsx\";\nimport React, { Component } from 'react';\nimport './CircularProgress.css'; // import { CircularProgressbar } from 'react-circular-progressbar';  \n\nclass CircularProgressBar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    // Size of the enclosing square\n    const sqSize = this.props.sqSize; // SVG centers the stroke width on the radius, subtract out so circle fits in square\n\n    const radius = (this.props.sqSize - this.props.strokeWidth) / 2; // Enclose cicle in a circumscribing square\n\n    const viewBox = \"0 0 \".concat(sqSize, \" \").concat(sqSize); // Arc length at 100% coverage is the circle circumference\n\n    const dashArray = radius * Math.PI * 2; // Scale 100% coverage overlay with the actual percent\n\n    const dashOffset = dashArray - dashArray * this.props.percentage / 100;\n    return React.createElement(\"svg\", {\n      width: this.props.sqSize,\n      height: this.props.sqSize,\n      viewBox: viewBox,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"circle\", {\n      // style={{stroke: 'white'}}\n      className: \"circle-background\",\n      cx: this.props.sqSize / 2,\n      cy: this.props.sqSize / 2,\n      r: radius,\n      strokeWidth: \"\".concat(this.props.strokeWidth, \"px\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }), React.createElement(\"circle\", {\n      // className=\"circle-progress\"\n      cx: this.props.sqSize / 2,\n      cy: this.props.sqSize / 2,\n      r: radius,\n      strokeWidth: \"\".concat(this.props.strokeWidth, \"px\") // Start progress marker at 12 O'Clock\n      ,\n      transform: \"rotate(-90 \".concat(this.props.sqSize / 2, \" \").concat(this.props.sqSize / 2, \")\"),\n      style: {\n        fill: '#f1f1f1',\n        stroke: 'green',\n        strokeDasharray: dashArray,\n        strokeDashoffset: dashOffset\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), React.createElement(\"text\", {\n      style: {\n        fontSize: '1.1em',\n        fontWeight: 'bold',\n        fill: 'black'\n      },\n      className: \"circle-text\",\n      x: \"50%\",\n      y: \"50%\",\n      dy: \".3em\",\n      textAnchor: \"middle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"\".concat(this.props.percentage, \"%\")));\n  }\n\n} //   CircularProgressBar.defaultProps = {\n//     sqSize: 100,\n//     percentage: 25,\n//     strokeWidth: 10\n//   };\n\n\nexport default CircularProgressBar;","map":{"version":3,"sources":["/home/chenna/parentOf/cards/src/CircularProgressBar.jsx"],"names":["React","Component","CircularProgressBar","constructor","props","state","render","sqSize","radius","strokeWidth","viewBox","dashArray","Math","PI","dashOffset","percentage","fill","stroke","strokeDasharray","strokeDashoffset","fontSize","fontWeight"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,wBAAP,C,CACA;;AAGA,MAAMC,mBAAN,SAAkCD,SAAlC,CAA4C;AACxCE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa,EAAb;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP;AACA,UAAMC,MAAM,GAAG,KAAKH,KAAL,CAAWG,MAA1B,CAFO,CAGP;;AACA,UAAMC,MAAM,GAAG,CAAC,KAAKJ,KAAL,CAAWG,MAAX,GAAoB,KAAKH,KAAL,CAAWK,WAAhC,IAA+C,CAA9D,CAJO,CAKP;;AACA,UAAMC,OAAO,iBAAUH,MAAV,cAAoBA,MAApB,CAAb,CANO,CAOP;;AACA,UAAMI,SAAS,GAAGH,MAAM,GAAGI,IAAI,CAACC,EAAd,GAAmB,CAArC,CARO,CASP;;AACA,UAAMC,UAAU,GAAGH,SAAS,GAAGA,SAAS,GAAG,KAAKP,KAAL,CAAWW,UAAvB,GAAoC,GAAnE;AAEA,WACE;AACI,MAAA,KAAK,EAAE,KAAKX,KAAL,CAAWG,MADtB;AAEI,MAAA,MAAM,EAAE,KAAKH,KAAL,CAAWG,MAFvB;AAGI,MAAA,OAAO,EAAEG,OAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAII;AACI;AACF,MAAA,SAAS,EAAC,mBAFZ;AAGE,MAAA,EAAE,EAAE,KAAKN,KAAL,CAAWG,MAAX,GAAoB,CAH1B;AAIE,MAAA,EAAE,EAAE,KAAKH,KAAL,CAAWG,MAAX,GAAoB,CAJ1B;AAKE,MAAA,CAAC,EAAEC,MALL;AAME,MAAA,WAAW,YAAK,KAAKJ,KAAL,CAAWK,WAAhB,OANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,EAWI;AACI;AACF,MAAA,EAAE,EAAE,KAAKL,KAAL,CAAWG,MAAX,GAAoB,CAF1B;AAGE,MAAA,EAAE,EAAE,KAAKH,KAAL,CAAWG,MAAX,GAAoB,CAH1B;AAIE,MAAA,CAAC,EAAEC,MAJL;AAKE,MAAA,WAAW,YAAK,KAAKJ,KAAL,CAAWK,WAAhB,OALb,CAMI;AANJ;AAOE,MAAA,SAAS,uBAAgB,KAAKL,KAAL,CAAWG,MAAX,GAAoB,CAApC,cAAyC,KAAKH,KAAL,CAAWG,MAAX,GAAoB,CAA7D,MAPX;AAQE,MAAA,KAAK,EAAE;AACLS,QAAAA,IAAI,EAAE,SADD;AAELC,QAAAA,MAAM,EAAE,OAFH;AAGLC,QAAAA,eAAe,EAAEP,SAHZ;AAILQ,QAAAA,gBAAgB,EAAEL;AAJb,OART;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXJ,EAyBI;AACA,MAAA,KAAK,EAAE;AACHM,QAAAA,QAAQ,EAAE,OADP;AAEHC,QAAAA,UAAU,EAAE,MAFT;AAGHL,QAAAA,IAAI,EAAE;AAHH,OADP;AAME,MAAA,SAAS,EAAC,aANZ;AAOE,MAAA,CAAC,EAAC,KAPJ;AAQE,MAAA,CAAC,EAAC,KARJ;AASE,MAAA,EAAE,EAAC,MATL;AAUE,MAAA,UAAU,EAAC,QAVb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAWM,KAAKZ,KAAL,CAAWW,UAXjB,OAzBJ,CADF;AAyCD;;AA3DuC,C,CA8D5C;AACA;AACA;AACA;AACA;;;AAEA,eAAeb,mBAAf","sourcesContent":["import React, { Component } from 'react'\nimport './CircularProgress.css';\n// import { CircularProgressbar } from 'react-circular-progressbar';  \n\n\nclass CircularProgressBar extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {};\n    }\n  \n    render() {\n      // Size of the enclosing square\n      const sqSize = this.props.sqSize;\n      // SVG centers the stroke width on the radius, subtract out so circle fits in square\n      const radius = (this.props.sqSize - this.props.strokeWidth) / 2;\n      // Enclose cicle in a circumscribing square\n      const viewBox = `0 0 ${sqSize} ${sqSize}`;\n      // Arc length at 100% coverage is the circle circumference\n      const dashArray = radius * Math.PI * 2;\n      // Scale 100% coverage overlay with the actual percent\n      const dashOffset = dashArray - dashArray * this.props.percentage / 100;\n  \n      return (\n        <svg\n            width={this.props.sqSize}\n            height={this.props.sqSize}\n            viewBox={viewBox}>\n            <circle\n                // style={{stroke: 'white'}}\n              className=\"circle-background\"\n              cx={this.props.sqSize / 2}\n              cy={this.props.sqSize / 2}\n              r={radius}\n              strokeWidth={`${this.props.strokeWidth}px`} />\n            <circle\n                // className=\"circle-progress\"\n              cx={this.props.sqSize / 2}\n              cy={this.props.sqSize / 2}\n              r={radius}\n              strokeWidth={`${this.props.strokeWidth}px`}\n                // Start progress marker at 12 O'Clock\n              transform={`rotate(-90 ${this.props.sqSize / 2} ${this.props.sqSize / 2})`}\n              style={{\n                fill: '#f1f1f1',\n                stroke: 'green',\n                strokeDasharray: dashArray,\n                strokeDashoffset: dashOffset\n              }} />\n            <text\n            style={{\n                fontSize: '1.1em',\n                fontWeight: 'bold',\n                fill: 'black'\n              }}\n              className=\"circle-text\"\n              x=\"50%\"\n              y=\"50%\"\n              dy=\".3em\"\n              textAnchor=\"middle\">\n              {`${this.props.percentage}%`}\n            </text>\n        </svg>\n      );\n    }\n  }\n  \n//   CircularProgressBar.defaultProps = {\n//     sqSize: 100,\n//     percentage: 25,\n//     strokeWidth: 10\n//   };\n\nexport default CircularProgressBar;\n  "]},"metadata":{},"sourceType":"module"}